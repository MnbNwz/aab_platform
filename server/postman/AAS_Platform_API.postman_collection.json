{
  "info": {
    "name": "AAS Platform API",
    "description": "Complete API collection for AAS Platform with authentication, user management, services management, investment opportunities, and intelligent caching system.\n\n🆕 **Updated Features (v2.6.0):**\n• Analytics API - Comprehensive business intelligence (GET /api/analytics)\n• Services API - Public services list and admin management\n• Favorites API - Customer favorite contractors management\n• Property soft delete with isActive toggle (PATCH /property/:id/status)\n• Bid accept/reject unified endpoint (PUT /bids/:bidId/status)\n• Job editing locked after bid acceptance (customer security)\n• Premium contractor immediate job access (0 hour delay fixed)\n• Optimized contractor job listings (removed heavy fields)\n• Customer contact info protected until bid acceptance\n• Contractor job detail with self/myBid/selfBidAccepted flags\n• Property bidCount in job statistics\n• Investment opportunities with contractor interest management\n• Simplified membership system - always starts as one-time payment\n• Auto-renewal toggle feature for existing memberships\n• Membership upgrade functionality\n• Enhanced webhook handling for membership payments\n• Complete OTP verification system (verify, resend, state check)\n• Password reset flow with OTP verification\n• Lead management system for contractors\n• firstName & lastName required for all user registrations\n• User-level approval system (moved from role-specific)\n• Redis caching with memory fallback for production reliability\n\n📊 **Analytics & Dashboard:**\n• Dashboard API (/api/dashboard) - Quick health metrics by role\n• Analytics API (/api/analytics) - Full business intelligence (admin only)\n• Revenue breakdown (jobs, memberships, payments)\n• Monthly trends and growth metrics\n• Service/type revenue analysis\n• Top performers (contractors, customers)\n• Lead conversion analytics\n• 5-minute cache for optimal performance\n\n⚡ **Performance Features:**\n• Mega MongoDB aggregation pipeline (6+ queries → 1)\n• Analytics caching (500-800ms first call, <5ms cached)\n• Optimized contractor job pipeline (60-70% less memory)\n• Early time-based filtering reduces query load\n• Conditional property lookup for radius filtering\n• Single-pass radius filtering with property removal\n• Authentication middleware caching (50-80% boost)\n• Membership plans caching (1-hour TTL)\n• User profile caching with intelligent invalidation\n\n🔐 **Security Features:**\n• Customer contact hidden until bid acceptance\n• Property validation prevents inactive property use\n• Job editing locked after bid acceptance\n• Bid status validation (accept/reject)\n• Complete OTP verification workflow\n• JWT-based authentication with HttpOnly cookies\n• Role-based access control (RBAC)\n• Enhanced payment security middleware\n• Admin-only analytics endpoint\n\n💼 **Lead Management:**\n• Contractor lead access system with tier-based limits\n• Lead usage tracking and statistics\n• Job request access with credit deduction\n• Filtering by service type, property type, and budget\n• Monthly/yearly lead reset automation\n\n💰 **Investment Opportunities:**\n• Admin-managed investment opportunities\n• Contractor interest expression\n• Interest status tracking (pending/accepted/rejected)\n• Multi-file uploads for photos and documents\n• Investment statistics and analytics\n\n📋 **API Highlights:**\n• Comprehensive admin user management with filtering\n• Simplified membership plan management\n• Advanced payment processing with Stripe\n• Property management with soft delete\n• Job request and bidding system with security\n• Services management with versioning\n• Role-based dashboard analytics\n• Business intelligence analytics\n• Customer favorites system",
    "version": "2.6.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Generic Signin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.johnson@business.com\",\n  \"password\": \"Customer@456\"\n}\n\n// Other login credentials:\n// Admin:\n// {\n//   \"email\": \"admin@aasplatform.com\",\n//   \"password\": \"Admin@2025!Secure\"\n// }\n\n// Customer:\n// {\n//   \"email\": \"customer1@test.com\",\n//   \"password\": \"Customer@123\"\n// }\n\n// Contractor:\n// {\n//   \"email\": \"contractor1@test.com\",\n//   \"password\": \"Contractor@123\"\n// }"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signin"]
            },
            "description": "Generic signin endpoint - change email/password in body as needed. Sets authToken automatically. Response includes user object with firstName, lastName, and updated schema fields."
          }
        },
        {
          "name": "Customer Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"customer1@test.com\",\n  \"password\": \"Customer@123\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.935242, 40.730610]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"domestic\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Customer registration - Required fields: firstName, lastName, email, password, phone, role, geoHome, and customer profile with defaultPropertyType"
          }
        },
        {
          "name": "Contractor Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"contractor1@test.com\",\n  \"password\": \"Contractor@123\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"contractor\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"contractor\": {\n    \"companyName\": \"TestCorp Contracting LLC\",\n    \"services\": [\"plumbing\", \"electrical\", \"hvac\"],\n    \"license\": \"LIC789456\",\n    \"taxId\": \"TAX789456\",\n    \"docs\": [{\"type\": \"license\", \"url\": \"https://example.com/license.pdf\"}, {\"type\": \"insurance\", \"url\": \"https://example.com/insurance.pdf\"}]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Contractor registration - Required fields: firstName, lastName, email, password, phone, role, geoHome, and contractor profile with company details, services, license, taxId, and docs. Services must be from the available list (call GET /api/services first to get current options)."
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current authenticated user's profile - returns user object with firstName, lastName, role-specific data, approval status, and Stripe fields (stripeCustomerId, stripeConnectAccountId, stripeConnectStatus). Uses cached data for improved performance."
          }
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            },
            "description": "Verify OTP sent to user's email during registration or password reset"
          }
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/resend-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "resend-otp"]
            },
            "description": "Resend OTP to user's email"
          }
        },
        {
          "name": "Get Verification State",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verification-state?email=customer1@test.com",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verification-state"],
              "query": [
                {
                  "key": "email",
                  "value": "customer1@test.com",
                  "description": "User email to check verification state"
                }
              ]
            },
            "description": "Get current verification state for a user email"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "description": "Initiate password reset process by sending OTP to user's email"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"NewPassword@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "description": "Reset password using OTP verification"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout user and invalidate authentication tokens. Clears HttpOnly cookies and removes user from cache."
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"domestic\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            },
            "description": "Create a new user account"
          }
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user?page=1&limit=10&role=customer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "Filter by role: customer, contractor, admin"
                }
              ]
            },
            "description": "List users with pagination and filtering"
          }
        },
        {
          "name": "Get Admin Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/get-admins",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "get-admins"]
            },
            "description": "Get all admin users"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Get user details by ID"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "firstName",
                  "value": "John",
                  "type": "text"
                },
                {
                  "key": "lastName",
                  "value": "Doe",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "john.doe@example.com",
                  "type": "text"
                },
                {
                  "key": "phone",
                  "value": "+1234567890",
                  "type": "text"
                },
                {
                  "key": "profileImage",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Update user profile with optional profile image"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"OldPassword123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "change-password"]
            },
            "description": "Change user password"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Delete user account"
          }
        }
      ]
    },
    {
      "name": "Admin Management",
      "item": [
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "stats"]
            },
            "description": "Get user statistics overview"
          }
        },
        {
          "name": "Get Users with Advanced Filtering",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=10&role=customer&status=pending&approval=pending&email=&phone=&companyName=&services=&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (5, 10, 20, 50)"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "Filter by role: customer, contractor, admin",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "pending",
                  "description": "Filter by status: pending, active, revoke",
                  "disabled": true
                },
                {
                  "key": "approval",
                  "value": "pending",
                  "description": "Filter by approval: pending, approved, rejected",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "",
                  "description": "Search by email pattern (e.g., 'customer', '@test.com')",
                  "disabled": true
                },
                {
                  "key": "phone",
                  "value": "",
                  "description": "Search by phone pattern (e.g., '+1234', '567')",
                  "disabled": true
                },
                {
                  "key": "companyName",
                  "value": "",
                  "description": "Search contractor company names (e.g., 'TestCorp')",
                  "disabled": true
                },
                {
                  "key": "services",
                  "value": "",
                  "description": "Filter by services: plumbing,electrical,hvac (comma-separated)",
                  "disabled": true
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "Sort field: createdAt, updatedAt, email"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc, desc"
                }
              ]
            },
            "description": "Primary filtering endpoint with comprehensive parameter options"
          }
        },
        {
          "name": "Get Single User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Get single user by ID (set userId variable)"
          }
        },
        {
          "name": "Approve User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"active\",\n  \"approval\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Approve a user - sets status to active and approval to approved"
          }
        },
        {
          "name": "Reject User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approval\": \"rejected\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Reject a user - sets approval to rejected"
          }
        },
        {
          "name": "Revoke User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Revoke (soft delete) a user"
          }
        }
      ]
    },
    {
      "name": "Services Management",
      "item": [
        {
          "name": "Get Services (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Get current available contractor services - Public endpoint, returns latest version of services array with version number and last updated timestamp. Use this endpoint to get valid service options for contractor registration."
          }
        },
        {
          "name": "Create Services Version",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"services\": [\n    \"plumbing\",\n    \"electrical\",\n    \"hvac\",\n    \"general\",\n    \"roofing\",\n    \"carpentry\",\n    \"painting\",\n    \"landscaping\",\n    \"cleaning\",\n    \"pest control\",\n    \"flooring\",\n    \"windows\",\n    \"doors\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Create new services version - Admin only. Creates a new document with incremented version number. All service names are normalized to lowercase and deduplicated."
          }
        }
      ]
    },
    {
      "name": "Membership Management",
      "item": [
        {
          "name": "Get All Membership Plans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans"]
            },
            "description": "Get all available membership plans (authenticated endpoint)"
          }
        },
        {
          "name": "Get Plans by User Type",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans/{{userType}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans", "{{userType}}"]
            },
            "description": "Get membership plans by user type (customer or contractor). Set userType variable to 'customer' or 'contractor'."
          }
        },
        {
          "name": "Get Current Membership",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/current",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "current"]
            },
            "description": "Get current user's active membership"
          }
        },
        {
          "name": "Create Membership Checkout Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"planId\": \"PLAN_ID_HERE\",\n  \"billingPeriod\": \"monthly\"\n}\n\n// billingPeriod: \"monthly\" or \"yearly\"\n// All memberships start as one-time payments\n// Auto-renewal can be toggled later via /api/membership/toggle-auto-renewal"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "checkout"]
            },
            "description": "Create Stripe checkout session for membership purchase (simplified - always one-time initially)"
          }
        },
        {
          "name": "Create Membership Upgrade Checkout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"newPlanId\": \"NEW_PLAN_ID_HERE\",\n  \"newBillingPeriod\": \"monthly\"\n}\n\n// newBillingPeriod: \"monthly\" or \"yearly\"\n// Upgrades existing membership with prorated charges"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/upgrade/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "upgrade", "checkout"]
            },
            "description": "Create Stripe checkout session for membership upgrade with prorated charges"
          }
        },
        {
          "name": "Toggle Auto-Renewal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isAutoRenew\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/toggle-auto-renewal",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "toggle-auto-renewal"]
            },
            "description": "Toggle auto-renewal for current active membership"
          }
        },
        {
          "name": "Get Membership History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "history"]
            },
            "description": "Get user's complete membership history"
          }
        },
        {
          "name": "Get Membership Stats (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "stats"]
            },
            "description": "Admin only - Get membership statistics and analytics"
          }
        },
        {
          "name": "Get User Memberships (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user-memberships",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user-memberships"]
            },
            "description": "Public endpoint to fetch all user memberships for internal use"
          }
        }
      ]
    },
    {
      "name": "Property Management",
      "item": [
        {
          "name": "Create Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "address",
                  "value": "123 Main Street, New York, NY 10001",
                  "type": "text"
                },
                {
                  "key": "propertyType",
                  "value": "domestic",
                  "type": "text"
                },
                {
                  "key": "bedrooms",
                  "value": "3",
                  "type": "text"
                },
                {
                  "key": "bathrooms",
                  "value": "2",
                  "type": "text"
                },
                {
                  "key": "squareFootage",
                  "value": "1500",
                  "type": "text"
                },
                {
                  "key": "yearBuilt",
                  "value": "2010",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Beautiful family home with modern amenities",
                  "type": "text"
                },
                {
                  "key": "images",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/property",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property"]
            },
            "description": "Create a new property with up to 15 images"
          }
        },
        {
          "name": "Get User Properties",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/property?page=1&limit=10&propertyType=domestic",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "propertyType",
                  "value": "domestic",
                  "description": "Filter by property type: domestic, commercial"
                }
              ]
            },
            "description": "Get all properties for the authenticated user"
          }
        },
        {
          "name": "Get Property by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/property/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property", "{{propertyId}}"]
            },
            "description": "Get specific property details by ID"
          }
        },
        {
          "name": "Update Property",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "address",
                  "value": "123 Updated Street, New York, NY 10001",
                  "type": "text"
                },
                {
                  "key": "bedrooms",
                  "value": "4",
                  "type": "text"
                },
                {
                  "key": "bathrooms",
                  "value": "3",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Updated description with new details",
                  "type": "text"
                },
                {
                  "key": "images",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/property/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property", "{{propertyId}}"]
            },
            "description": "Update an existing property with new images"
          }
        },
        {
          "name": "Toggle Property Status (Soft Delete)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": false\n}\n\n// Set to false to deactivate (soft delete)\n// Set to true to reactivate"
            },
            "url": {
              "raw": "{{baseUrl}}/api/property/{{propertyId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property", "{{propertyId}}", "status"]
            },
            "description": "Toggle property active status (soft delete/restore). Inactive properties cannot be used for new job requests but existing jobs remain unaffected. Property data is never deleted from database."
          }
        }
      ]
    },
    {
      "name": "Job Request Management",
      "item": [
        {
          "name": "Create Job Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Kitchen Renovation\",\n  \"description\": \"Complete kitchen renovation including cabinets, countertops, and appliances\",\n  \"property\": \"PROPERTY_ID\",\n  \"service\": \"general\",\n  \"estimate\": 15000,\n  \"type\": \"regular\",\n  \"timeline\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests"]
            },
            "description": "Create a new job request for contractors to bid on. Use valid services from /api/services endpoint. Timeline is in days."
          }
        },
        {
          "name": "Get Job Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests?page=1&limit=10&status=open&serviceType=general",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "status",
                  "value": "open",
                  "description": "Filter by status: open, in_progress, completed, cancelled"
                },
                {
                  "key": "serviceType",
                  "value": "general",
                  "description": "Filter by service type"
                }
              ]
            },
            "description": "Get job requests with filtering and pagination"
          }
        },
        {
          "name": "Get Job Request by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}"]
            },
            "description": "Get specific job request details by ID. Returns timelineHistory array for status tracking."
          }
        },
        {
          "name": "Update Job Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Kitchen Renovation\",\n  \"description\": \"Updated description with additional requirements\",\n  \"estimate\": 18000,\n  \"timeline\": 45\n}\n\n// NOTE: Cannot edit job after a bid has been accepted (unless you're an admin)"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}"]
            },
            "description": "Update an existing job request. Only updatable fields: title, description, service, estimate, timeline. Cannot edit if a bid has already been accepted (admin can override)."
          }
        }
      ]
    },
    {
      "name": "Bid Management",
      "item": [
        {
          "name": "Create Bid (Contractor)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobRequestId\": \"JOB_REQUEST_ID\",\n  \"bidAmount\": 12000,\n  \"message\": \"Professional kitchen renovation with high-quality materials and experienced team\",\n  \"timeline\": {\n    \"startDate\": \"2025-02-01\",\n    \"endDate\": \"2025-03-15\"\n  },\n  \"materials\": {\n    \"included\": true,\n    \"description\": \"All materials included: premium cabinets, countertops, fixtures\"\n  },\n  \"warranty\": {\n    \"period\": 12,\n    \"description\": \"1 year warranty on all work and materials\"\n  }\n}\n\n// NOTE: Creates bid and consumes 1 lead from contractor's monthly quota"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids"]
            },
            "description": "Create a bid for a job request (contractor only). Requires timeline object with startDate/endDate. Materials and warranty must be objects. Consumes 1 lead."
          }
        },
        {
          "name": "Get Contractor's Own Bids",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/contractor?page=1&limit=10&status=all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "contractor"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "status",
                  "value": "all",
                  "description": "Filter by status: all, pending, accepted, rejected"
                }
              ]
            },
            "description": "Get all bids created by the contractor"
          }
        },
        {
          "name": "Get Job Bids",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/job/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "job", "{{jobRequestId}}"]
            },
            "description": "Get all bids for a specific job request"
          }
        },
        {
          "name": "Accept Bid (Customer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"accept\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/{{bidId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "{{bidId}}", "status"]
            },
            "description": "Accept a bid for a job request (customer only). This will:\n1. Mark the selected bid as 'accepted'\n2. Reject all other bids for the same job automatically\n3. Update job status to 'inprogress'\n4. Add entry to timelineHistory\n5. Set acceptedBid field on job request\n6. Lock job from further editing"
          }
        },
        {
          "name": "Reject Bid (Customer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"reject\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/{{bidId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "{{bidId}}", "status"]
            },
            "description": "Reject a bid for a job request (customer only). Job remains 'open' and other bids remain unchanged."
          }
        }
      ]
    },
    {
      "name": "Contractor Job Management",
      "item": [
        {
          "name": "Get Jobs for Contractor",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/jobs?page=1&limit=10&service=plumbing&search=renovation",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "contractor", "jobs"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of jobs per page (max 100)"
                },
                {
                  "key": "service",
                  "value": "plumbing",
                  "description": "Filter by service type (e.g., plumbing, electrical, solar)",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "renovation",
                  "description": "Search in job title and description",
                  "disabled": true
                }
              ]
            },
            "description": "Get jobs available to contractor based on membership plan. Returns jobs with access control, time delays, lead limits, and geospatial filtering applied."
          }
        },
        {
          "name": "Get Job Details (Free View)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "contractor", "jobs", "{{jobId}}"]
            },
            "description": "Get specific job details for contractor. Free to view. Returns full property object, self flag (true if contractor bid), myBid object, selfBidAccepted flag, and customer contact ONLY if contractor's bid was accepted."
          }
        }
      ]
    },
    {
      "name": "Payment Management",
      "item": [
        {
          "name": "Create Job Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobRequestId\": \"JOB_REQUEST_ID\",\n  \"contractorId\": \"CONTRACTOR_ID\",\n  \"totalAmount\": 1500.00,\n  \"description\": \"Kitchen renovation project\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "create"]
            },
            "description": "Create a new job payment with deposit, pre-start, and completion phases"
          }
        },
        {
          "name": "Process Job Deposit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/deposit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "deposit"]
            },
            "description": "Process the initial 15% deposit payment for a job"
          }
        },
        {
          "name": "Process Job Pre-Start Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/prestart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "prestart"]
            },
            "description": "Process the 25% pre-start payment before work begins"
          }
        },
        {
          "name": "Process Job Completion Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/completion",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "completion"]
            },
            "description": "Process the final 60% completion payment after work is finished"
          }
        },
        {
          "name": "Process Job Refund",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"reason\": \"Work not completed as specified\",\n  \"refundAmount\": 500.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/refund",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "refund"]
            },
            "description": "Process a refund for a job payment"
          }
        },
        {
          "name": "Setup Contractor Connect",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"country\": \"US\",\n  \"type\": \"express\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/setup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "setup"]
            },
            "description": "Setup Stripe Connect account for contractor"
          }
        },
        {
          "name": "Get Contractor Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "dashboard"]
            },
            "description": "Get contractor's Stripe Connect dashboard data"
          }
        },
        {
          "name": "Get Connect Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "status"]
            },
            "description": "Get contractor's Stripe Connect account status"
          }
        },
        {
          "name": "Get Payment History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/history?page=1&limit=10&type=all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "history"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "type",
                  "value": "all",
                  "description": "Payment type: all, membership, job, offmarket"
                }
              ]
            },
            "description": "Get user's payment history with filtering"
          }
        },
        {
          "name": "Get Payment Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "{{paymentId}}"]
            },
            "description": "Get detailed information about a specific payment"
          }
        },
        {
          "name": "Get Payment Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/stats/overview",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "stats", "overview"]
            },
            "description": "Get payment statistics and analytics (admin only)"
          }
        },
        {
          "name": "Stripe Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Stripe-Signature",
                "value": "t=1234567890,v1=signature_here"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"evt_1234567890\",\n  \"object\": \"event\",\n  \"type\": \"payment_intent.succeeded\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"pi_1234567890\",\n      \"amount\": 150000,\n      \"currency\": \"usd\",\n      \"status\": \"succeeded\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/webhook/stripe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "webhook", "stripe"]
            },
            "description": "Stripe webhook endpoint for payment events"
          }
        }
      ]
    },
    {
      "name": "Dashboard & Analytics",
      "item": [
        {
          "name": "Smart Dashboard (Role-Based)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard"]
            },
            "description": "Quick health check dashboard - returns role-based data:\n\n🔴 **Admin**: User counts, job counts, membership counts, health score (NO money metrics)\n🟡 **Contractor**: Bidding stats, lead usage, recent activity\n🔵 **Customer**: Job statistics, property analytics\n\nFast, lightweight, status-focused. For financial metrics, use /api/analytics (admin only)."
          }
        },
        {
          "name": "Business Analytics (Admin Only)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics"]
            },
            "description": "Comprehensive business intelligence and financial analytics (admin only).\n\n📊 **Includes:**\n• Revenue metrics (jobs, memberships, payments)\n• Monthly revenue trends (for line charts)\n• Service revenue breakdown (for pie/donut charts)\n• Contractor performance rankings\n• Customer spending patterns\n• Lead conversion analytics\n• Growth trends (month-over-month)\n• Top performers\n\n⚡ **Optimized for:**\n• Chart data visualization\n• Business decision making\n• Financial reporting\n• Performance tracking\n\n🔒 **Security:** Admin authentication required\n\n⚙️ **Performance:**\n• 5-minute cache (first call: 500-800ms, cached: <5ms)\n• Optimized MongoDB aggregation pipelines\n• Single mega-pipeline for job analytics"
          },
          "response": [
            {
              "name": "Success Response Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/analytics",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "analytics"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"revenue\": {\n      \"jobs\": {\n        \"summary\": {\n          \"totalJobsValue\": 257347,\n          \"completedJobsValue\": 5000,\n          \"inProgressValue\": 200,\n          \"openJobsValue\": 252147,\n          \"cancelledValue\": 0,\n          \"avgJobValue\": 28594.11,\n          \"totalJobs\": 9,\n          \"completedJobs\": 1\n        },\n        \"monthlyRevenue\": [\n          {\n            \"year\": 2025,\n            \"month\": 10,\n            \"status\": \"open\",\n            \"count\": 8,\n            \"totalValue\": 252147\n          }\n        ],\n        \"serviceRevenue\": [\n          {\n            \"service\": \"plumbing\",\n            \"status\": \"open\",\n            \"count\": 7,\n            \"totalValue\": 239147,\n            \"avgValue\": 34163.86\n          },\n          {\n            \"service\": \"painting\",\n            \"status\": \"open\",\n            \"count\": 2,\n            \"totalValue\": 20000,\n            \"avgValue\": 10000\n          }\n        ],\n        \"typeRevenue\": [\n          {\n            \"type\": \"regular\",\n            \"count\": 9,\n            \"totalValue\": 257347,\n            \"avgValue\": 28594.11\n          }\n        ]\n      },\n      \"memberships\": {\n        \"summary\": {\n          \"totalRevenue\": 820000,\n          \"activeMemberships\": 6,\n          \"upgradedCount\": 1,\n          \"averageValue\": 136666.67\n        },\n        \"tierBreakdown\": [\n          {\n            \"tier\": \"premium\",\n            \"count\": 2,\n            \"totalRevenue\": 640000\n          },\n          {\n            \"tier\": \"standard\",\n            \"count\": 3,\n            \"totalRevenue\": 150000\n          },\n          {\n            \"tier\": \"basic\",\n            \"count\": 1,\n            \"totalRevenue\": 30000\n          }\n        ]\n      },\n      \"payments\": {\n        \"summary\": {\n          \"totalPayments\": 15,\n          \"totalAmount\": 1077347,\n          \"jobPayments\": 257347,\n          \"membershipPayments\": 820000,\n          \"avgPaymentAmount\": 71823.13\n        }\n      }\n    },\n    \"performance\": {\n      \"contractors\": {\n        \"summary\": {\n          \"totalBids\": 5,\n          \"acceptedBids\": 1,\n          \"avgBidAmount\": 4240.4,\n          \"conversionRate\": 20\n        },\n        \"topContractors\": [\n          {\n            \"_id\": \"68f1d51562751c13342fa9d3\",\n            \"email\": \"contractor@example.com\",\n            \"totalBids\": 3,\n            \"acceptedBids\": 1,\n            \"avgBidAmount\": 3000,\n            \"winRate\": 33.33\n          }\n        ]\n      },\n      \"customers\": {\n        \"summary\": {\n          \"totalCustomers\": 3,\n          \"activeCustomers\": 3,\n          \"avgJobsPerCustomer\": 3,\n          \"avgSpendingPerCustomer\": 85782.33\n        },\n        \"topCustomers\": [\n          {\n            \"_id\": \"68eaa64ff416c1159184825e\",\n            \"email\": \"customer@example.com\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"totalJobs\": 5,\n            \"totalSpending\": 230000\n          }\n        ]\n      },\n      \"leads\": {\n        \"summary\": {\n          \"totalLeadsUsed\": 150,\n          \"basicTierLeads\": 30,\n          \"standardTierLeads\": 60,\n          \"premiumTierLeads\": 60\n        },\n        \"conversionRate\": {\n          \"totalLeads\": 150,\n          \"convertedLeads\": 15,\n          \"conversionRate\": 10\n        }\n      }\n    },\n    \"trends\": {\n      \"currentMonth\": {\n        \"jobs\": 9,\n        \"users\": 2,\n        \"month\": 10,\n        \"year\": 2025\n      },\n      \"previousMonth\": {\n        \"jobs\": 0,\n        \"users\": 0,\n        \"month\": 9,\n        \"year\": 2025\n      },\n      \"growth\": {\n        \"jobsGrowthPercent\": 100,\n        \"usersGrowthPercent\": 100\n      }\n    }\n  },\n  \"timestamp\": \"2025-10-18T10:30:00.000Z\",\n  \"description\": \"Comprehensive platform analytics and business intelligence\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Investment Opportunities",
      "item": [
        {
          "name": "Get All Investment Opportunities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities?page=1&limit=10&status=active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "active",
                  "description": "Filter by status: active, completed, cancelled",
                  "disabled": true
                }
              ]
            },
            "description": "Get all investment opportunities (authenticated). Returns list of opportunities with pagination and filtering."
          }
        },
        {
          "name": "Get Investment Opportunity by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/{{opportunityId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities", "{{opportunityId}}"]
            },
            "description": "Get specific investment opportunity details by ID"
          }
        },
        {
          "name": "Create Investment Opportunity (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Luxury Condo Development",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Premium condominium development in downtown area",
                  "type": "text"
                },
                {
                  "key": "location",
                  "value": "Downtown, NY",
                  "type": "text"
                },
                {
                  "key": "estimatedBudget",
                  "value": "5000000",
                  "type": "text"
                },
                {
                  "key": "timeline",
                  "value": "24",
                  "type": "text",
                  "description": "Timeline in months"
                },
                {
                  "key": "expectedROI",
                  "value": "25",
                  "type": "text",
                  "description": "Expected ROI percentage"
                },
                {
                  "key": "photos",
                  "type": "file",
                  "src": [],
                  "description": "Upload up to 10 photos"
                },
                {
                  "key": "documents",
                  "type": "file",
                  "src": [],
                  "description": "Upload up to 5 documents"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities"]
            },
            "description": "Create a new investment opportunity (admin only). Supports up to 10 photos and 5 documents."
          }
        },
        {
          "name": "Update Investment Opportunity (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Updated Luxury Condo Development",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Updated description with new details",
                  "type": "text"
                },
                {
                  "key": "estimatedBudget",
                  "value": "5500000",
                  "type": "text"
                },
                {
                  "key": "photos",
                  "type": "file",
                  "src": [],
                  "description": "Upload new photos (up to 10)"
                },
                {
                  "key": "documents",
                  "type": "file",
                  "src": [],
                  "description": "Upload new documents (up to 5)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/{{opportunityId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities", "{{opportunityId}}"]
            },
            "description": "Update an existing investment opportunity (admin only)"
          }
        },
        {
          "name": "Express Interest (Contractor)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"I am interested in this investment opportunity and would like to discuss further.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/{{opportunityId}}/interest",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities", "{{opportunityId}}", "interest"]
            },
            "description": "Express interest in an investment opportunity (contractor only)"
          }
        },
        {
          "name": "Get My Interests (Contractor)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/my-interests",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities", "my-interests"]
            },
            "description": "Get all investment opportunities the contractor has expressed interest in (contractor only)"
          }
        },
        {
          "name": "Update Interest Status (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"accepted\",\n  \"adminNote\": \"Contractor profile matches our requirements\"\n}\n\n// status: \"pending\", \"accepted\", \"rejected\""
            },
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/{{opportunityId}}/interests/{{contractorId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "investment",
                "opportunities",
                "{{opportunityId}}",
                "interests",
                "{{contractorId}}"
              ]
            },
            "description": "Update the status of a contractor's interest in an opportunity (admin only)"
          }
        },
        {
          "name": "Get Investment Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/investment/opportunities/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "investment", "opportunities", "statistics"]
            },
            "description": "Get investment opportunity statistics and analytics (admin only)"
          }
        }
      ]
    },
    {
      "name": "Favorites",
      "item": [
        {
          "name": "Get Favorite Contractors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/favorites",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites"]
            },
            "description": "Get all favorite contractors with full details (customers only)"
          }
        },
        {
          "name": "Add Contractor to Favorites",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"note\": \"Optional: Add a note about this contractor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/favorites/{{contractorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites", "{{contractorId}}"]
            },
            "description": "Add a contractor to favorites (max 10, customers only)"
          }
        },
        {
          "name": "Remove Contractor from Favorites",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/favorites/{{contractorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites", "{{contractorId}}"]
            },
            "description": "Remove a contractor from favorites (customers only)"
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Get All Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Get all available services (public endpoint). Returns list of services like plumbing, painting, electrical, etc."
          }
        },
        {
          "name": "Create Services (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"services\": [\n    {\n      \"name\": \"Plumbing\",\n      \"description\": \"Plumbing services including repairs and installations\"\n    },\n    {\n      \"name\": \"Electrical\",\n      \"description\": \"Electrical work and installations\"\n    },\n    {\n      \"name\": \"Painting\",\n      \"description\": \"Interior and exterior painting services\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Create multiple services (admin only). Provide array of services with name and description."
          }
        }
      ]
    }
  ]
}
