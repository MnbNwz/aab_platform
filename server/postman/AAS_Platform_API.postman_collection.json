{
  "info": {
    "name": "AAS Platform API",
    "description": "Complete API collection for AAS Platform with authentication, user management, services management, and intelligent caching system.\n\nüÜï **Updated Features (v2.3.0):**\n‚Ä¢ Simplified membership system - always starts as one-time payment\n‚Ä¢ Auto-renewal toggle feature for existing memberships\n‚Ä¢ Removed billing type complexity (no more one-time vs recurring distinction)\n‚Ä¢ Enhanced webhook handling for membership payments\n‚Ä¢ Graceful server shutdown with proper cleanup\n‚Ä¢ Fixed EventEmitter memory leaks\n‚Ä¢ Complete OTP verification system (verify, resend, state check)\n‚Ä¢ Password reset flow with OTP verification\n‚Ä¢ Lead management system for contractors\n‚Ä¢ firstName & lastName required for all user registrations\n‚Ä¢ User-level approval system (moved from role-specific)\n‚Ä¢ Redis caching with memory fallback for production reliability\n\n‚ö° **Performance Features:**\n‚Ä¢ Authentication middleware caching (50-80% performance boost)\n‚Ä¢ Membership plans caching (1-hour TTL)\n‚Ä¢ User profile caching with intelligent invalidation\n‚Ä¢ Cache fallback system ensures zero downtime\n‚Ä¢ Optimized webhook processing\n\nüîê **Authentication & Security:**\n‚Ä¢ Complete OTP verification workflow\n‚Ä¢ Password reset with email verification\n‚Ä¢ JWT-based authentication with HttpOnly cookies\n‚Ä¢ Role-based access control (RBAC)\n‚Ä¢ Rate limiting and security headers\n‚Ä¢ Enhanced payment security middleware\n\nüíº **Lead Management:**\n‚Ä¢ Contractor lead access system\n‚Ä¢ Lead usage tracking and statistics\n‚Ä¢ Job request access with credit deduction\n‚Ä¢ Filtering by service type, property type, and budget\n\nüìã **API Highlights:**\n‚Ä¢ Comprehensive admin user management with filtering\n‚Ä¢ Simplified membership plan management\n‚Ä¢ Advanced payment processing with Stripe\n‚Ä¢ Property management with image uploads\n‚Ä¢ Job request and bidding system\n‚Ä¢ Services management with versioning",
    "version": "2.3.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Generic Signin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.johnson@business.com\",\n  \"password\": \"Customer@456\"\n}\n\n// Other login credentials:\n// Admin:\n// {\n//   \"email\": \"admin@aasplatform.com\",\n//   \"password\": \"Admin@2025!Secure\"\n// }\n\n// Customer:\n// {\n//   \"email\": \"customer1@test.com\",\n//   \"password\": \"Customer@123\"\n// }\n\n// Contractor:\n// {\n//   \"email\": \"contractor1@test.com\",\n//   \"password\": \"Contractor@123\"\n// }"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signin"]
            },
            "description": "Generic signin endpoint - change email/password in body as needed. Sets authToken automatically. Response includes user object with firstName, lastName, and updated schema fields."
          }
        },
        {
          "name": "Customer Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"customer1@test.com\",\n  \"password\": \"Customer@123\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.935242, 40.730610]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"domestic\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Customer registration - Required fields: firstName, lastName, email, password, phone, role, geoHome, and customer profile with defaultPropertyType"
          }
        },
        {
          "name": "Contractor Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"contractor1@test.com\",\n  \"password\": \"Contractor@123\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"contractor\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"contractor\": {\n    \"companyName\": \"TestCorp Contracting LLC\",\n    \"services\": [\"plumbing\", \"electrical\", \"hvac\"],\n    \"license\": \"LIC789456\",\n    \"taxId\": \"TAX789456\",\n    \"docs\": [{\"type\": \"license\", \"url\": \"https://example.com/license.pdf\"}, {\"type\": \"insurance\", \"url\": \"https://example.com/insurance.pdf\"}]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Contractor registration - Required fields: firstName, lastName, email, password, phone, role, geoHome, and contractor profile with company details, services, license, taxId, and docs. Services must be from the available list (call GET /api/services first to get current options)."
          }
        },
        {
          "name": "Customer Signup (Commercial)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Johnson\",\n  \"email\": \"alice.johnson@business.com\",\n  \"password\": \"Customer@456\",\n  \"phone\": \"+1987654321\",\n  \"role\": \"customer\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"commercial\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Customer registration with commercial property type - demonstrates defaultPropertyType options"
          }
        },
        {
          "name": "Contractor Signup (Multiple Services)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Wilson\",\n  \"email\": \"bob.wilson@multiservice.com\",\n  \"password\": \"Contractor@789\",\n  \"phone\": \"+1555123456\",\n  \"role\": \"contractor\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.935242, 40.730610]\n  },\n  \"contractor\": {\n    \"companyName\": \"Wilson Multi-Service Co\",\n    \"services\": [\"roofing\", \"painting\", \"carpentry\"],\n    \"license\": \"EL67890\",\n    \"taxId\": \"98-7654321\",\n    \"docs\": [{\"type\": \"license\", \"url\": \"https://example.com/electrical-license.pdf\"}, {\"type\": \"certification\", \"url\": \"https://example.com/hvac-cert.pdf\"}]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Contractor registration with multiple services - Services are validated against the current available services list from GET /api/services. Update the services array based on the latest available options."
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current authenticated user's profile - returns user object with firstName, lastName, role-specific data, approval status, and Stripe fields (stripeCustomerId, stripeConnectAccountId, stripeConnectStatus). Uses cached data for improved performance."
          }
        },
        {
          "name": "Get User Profile with Stripe Fields",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get user profile including new Stripe integration fields:\n- stripeCustomerId: Stripe customer ID (null if not created)\n- stripeConnectAccountId: Stripe Connect account ID (null if not created)\n- stripeConnectStatus: Status of Stripe Connect account (pending/active/rejected/disabled)"
          }
        },
        {
          "name": "Edit Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"domestic\"\n  },\n  \"contractor\": {\n    \"companyName\": \"TestCorp Contracting LLC\",\n    \"services\": [\"plumbing\", \"electrical\"],\n    \"license\": \"LIC123456\",\n    \"taxId\": \"TAX123456\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Edit the profile of the current user. Only the fields provided in the body will be updated. Requires authentication."
          }
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            },
            "description": "Verify OTP sent to user's email during registration or password reset"
          }
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/resend-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "resend-otp"]
            },
            "description": "Resend OTP to user's email"
          }
        },
        {
          "name": "Get Verification State",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verification-state?email=customer1@test.com",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verification-state"],
              "query": [
                {
                  "key": "email",
                  "value": "customer1@test.com",
                  "description": "User email to check verification state"
                }
              ]
            },
            "description": "Get current verification state for a user email"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "description": "Initiate password reset process by sending OTP to user's email"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@test.com\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"NewPassword@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "description": "Reset password using OTP verification"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout user and invalidate authentication tokens. Clears HttpOnly cookies and removes user from cache."
          }
        }
      ]
    },
    {
      "name": "Membership Management",
      "item": [
        {
          "name": "Get All Membership Plans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans"]
            },
            "description": "Get all available membership plans (public endpoint)"
          }
        },
        {
          "name": "Get Customer Plans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans/customer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans", "customer"]
            },
            "description": "Get membership plans for customers only"
          }
        },
        {
          "name": "Get Contractor Plans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans/contractor",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans", "contractor"]
            },
            "description": "Get membership plans for contractors only"
          }
        },
        {
          "name": "Get Plans by User Type (Dynamic)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/plans/{{userType}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "plans", "{{userType}}"]
            },
            "description": "Get membership plans by user type (customer or contractor). Set userType variable to 'customer' or 'contractor'."
          }
        },
        {
          "name": "Get Current Membership",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/current",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "current"]
            },
            "description": "Get current user's active membership"
          }
        },
        {
          "name": "Create Membership Checkout Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"planId\": \"PLAN_ID_HERE\",\n  \"billingPeriod\": \"monthly\"\n}\n\n// billingPeriod: \"monthly\" or \"yearly\"\n// All memberships start as one-time payments\n// Auto-renewal can be toggled later via /api/membership/toggle-auto-renewal"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "checkout"]
            },
            "description": "Create Stripe checkout session for membership purchase (simplified - always one-time initially)"
          }
        },
        {
          "name": "Toggle Auto-Renewal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isAutoRenew\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/toggle-auto-renewal",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "toggle-auto-renewal"]
            },
            "description": "Toggle auto-renewal for current active membership"
          }
        },
        {
          "name": "Get Membership History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "history"]
            },
            "description": "Get user's complete membership history"
          }
        },
        {
          "name": "Get Membership Stats (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "stats"]
            },
            "description": "Admin only - Get membership statistics and analytics"
          }
        },
        {
          "name": "Get Current Membership",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/current",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "current"]
            },
            "description": "Get user's current active membership"
          }
        },
        {
          "name": "Get Membership History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/membership/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "history"]
            },
            "description": "Get user's membership history"
          }
        }
      ]
    },
    {
      "name": "Services Management",
      "item": [
        {
          "name": "Get Services (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Get current available contractor services - Public endpoint, returns latest version of services array with version number and last updated timestamp. Use this endpoint to get valid service options for contractor registration."
          }
        },
        {
          "name": "Create Services Version",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"services\": [\n    \"plumbing\",\n    \"electrical\",\n    \"hvac\",\n    \"general\",\n    \"roofing\",\n    \"carpentry\",\n    \"painting\",\n    \"landscaping\",\n    \"cleaning\",\n    \"pest control\",\n    \"flooring\",\n    \"windows\",\n    \"doors\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Create new services version - Admin only. Creates a new document with incremented version number. All service names are normalized to lowercase and deduplicated."
          }
        },
        {
          "name": "Create Services - Example 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"services\": [\n    \"plumbing\",\n    \"electrical\",\n    \"hvac\",\n    \"general\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Example: Create initial services with basic categories"
          }
        },
        {
          "name": "Create Services - Example 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"services\": [\n    \"plumbing\",\n    \"electrical\",\n    \"hvac\",\n    \"general\",\n    \"roofing\",\n    \"carpentry\",\n    \"painting\",\n    \"landscaping\",\n    \"cleaning\",\n    \"pest control\",\n    \"flooring\",\n    \"windows\",\n    \"doors\",\n    \"insulation\",\n    \"solar panels\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "services"]
            },
            "description": "Example: Expanded services list with more specialized categories"
          }
        }
      ]
    },
    {
      "name": "Payment Management",
      "item": [
        {
          "name": "Create Membership Checkout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"planId\": \"PLAN_ID_HERE\",\n  \"billingPeriod\": \"monthly\"\n}\n\n// billingPeriod: \"monthly\" or \"yearly\"\n// All memberships start as one-time payments\n// Auto-renewal can be toggled later via /api/membership/toggle-auto-renewal"
            },
            "url": {
              "raw": "{{baseUrl}}/api/membership/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "membership", "checkout"]
            },
            "description": "Create Stripe checkout session for membership purchase (simplified - always one-time initially)"
          }
        },
        {
          "name": "Create Job Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobRequestId\": \"JOB_REQUEST_ID\",\n  \"contractorId\": \"CONTRACTOR_ID\",\n  \"totalAmount\": 1500.00,\n  \"description\": \"Kitchen renovation project\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "create"]
            },
            "description": "Create a new job payment with deposit, pre-start, and completion phases"
          }
        },
        {
          "name": "Process Job Deposit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/deposit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "deposit"]
            },
            "description": "Process the initial 15% deposit payment for a job"
          }
        },
        {
          "name": "Process Job Pre-Start Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/prestart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "prestart"]
            },
            "description": "Process the 25% pre-start payment before work begins"
          }
        },
        {
          "name": "Process Job Completion Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/completion",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "completion"]
            },
            "description": "Process the final 60% completion payment after work is finished"
          }
        },
        {
          "name": "Process Job Refund",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"reason\": \"Work not completed as specified\",\n  \"refundAmount\": 500.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/job/refund",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "job", "refund"]
            },
            "description": "Process a refund for a job payment"
          }
        },
        {
          "name": "Create Off-Market Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 2000.00,\n  \"description\": \"Custom renovation project\",\n  \"contractorId\": \"CONTRACTOR_ID\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/offmarket/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "offmarket", "create"]
            },
            "description": "Create an off-market payment for custom projects"
          }
        },
        {
          "name": "Process Off-Market Deposit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/offmarket/deposit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "offmarket", "deposit"]
            },
            "description": "Process deposit payment for off-market project"
          }
        },
        {
          "name": "Request Financing",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"financingAmount\": 1500.00,\n  \"termMonths\": 12\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/offmarket/financing/request",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "offmarket", "financing", "request"]
            },
            "description": "Request financing for an off-market payment"
          }
        },
        {
          "name": "Process Financing Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"paymentMethodId\": \"pm_card_visa\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/offmarket/financing/pay",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "offmarket", "financing", "pay"]
            },
            "description": "Process financing payment for off-market project"
          }
        },
        {
          "name": "Process Off-Market Refund",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"PAYMENT_ID\",\n  \"reason\": \"Project cancelled\",\n  \"refundAmount\": 1000.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/offmarket/refund",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "offmarket", "refund"]
            },
            "description": "Process refund for off-market payment"
          }
        },
        {
          "name": "Setup Contractor Connect",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"country\": \"US\",\n  \"type\": \"express\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/setup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "setup"]
            },
            "description": "Setup Stripe Connect account for contractor"
          }
        },
        {
          "name": "Get Contractor Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "dashboard"]
            },
            "description": "Get contractor's Stripe Connect dashboard data"
          }
        },
        {
          "name": "Get Connect Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/connect/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "connect", "status"]
            },
            "description": "Get contractor's Stripe Connect account status"
          }
        },
        {
          "name": "Get Payment History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/history?page=1&limit=10&type=all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "history"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "type",
                  "value": "all",
                  "description": "Payment type: all, membership, job, offmarket"
                }
              ]
            },
            "description": "Get user's payment history with filtering"
          }
        },
        {
          "name": "Get Payment Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "{{paymentId}}"]
            },
            "description": "Get detailed information about a specific payment"
          }
        },
        {
          "name": "Get Payment Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payment/stats/overview",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "stats", "overview"]
            },
            "description": "Get payment statistics and analytics (admin only)"
          }
        },
        {
          "name": "Stripe Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Stripe-Signature",
                "value": "t=1234567890,v1=signature_here"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"evt_1234567890\",\n  \"object\": \"event\",\n  \"type\": \"payment_intent.succeeded\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"pi_1234567890\",\n      \"amount\": 150000,\n      \"currency\": \"usd\",\n      \"status\": \"succeeded\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payment/webhook/stripe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payment", "webhook", "stripe"]
            },
            "description": "Stripe webhook endpoint for payment events"
          }
        }
      ]
    },
    {
      "name": "Job Request Management",
      "item": [
        {
          "name": "Create Job Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Kitchen Renovation\",\n  \"description\": \"Complete kitchen renovation including cabinets, countertops, and appliances\",\n  \"property\": \"PROPERTY_ID\",\n  \"service\": \"solar\",\n  \"estimate\": 15000,\n  \"type\": \"regular\",\n  \"timeline\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests"]
            },
            "description": "Create a new job request for contractors to bid on. Use valid services from /api/services endpoint. Timeline is in days."
          }
        },
        {
          "name": "Get Job Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests?page=1&limit=10&status=open&serviceType=general",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "status",
                  "value": "open",
                  "description": "Filter by status: open, in_progress, completed, cancelled"
                },
                {
                  "key": "serviceType",
                  "value": "general",
                  "description": "Filter by service type"
                }
              ]
            },
            "description": "Get job requests with filtering and pagination"
          }
        },
        {
          "name": "Get Job Request by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}"]
            },
            "description": "Get specific job request details by ID. Returns timelineHistory array for status tracking."
          }
        },
        {
          "name": "Get Job Request with Timeline History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}"]
            },
            "description": "Get job request with complete timeline history showing all status changes, dates, and who made the changes. Includes timelineHistory array with status, date, and by fields."
          }
        },
        {
          "name": "Update Job Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Kitchen Renovation\",\n  \"description\": \"Updated description with additional requirements\",\n  \"budget\": 18000,\n  \"preferredEndDate\": \"2024-03-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}"]
            },
            "description": "Update an existing job request"
          }
        },
        {
          "name": "Cancel Job Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Project cancelled by customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/{{jobRequestId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "{{jobRequestId}}", "cancel"]
            },
            "description": "Cancel an existing job request"
          }
        }
      ]
    },
    {
      "name": "Property Management",
      "item": [
        {
          "name": "Create Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "address",
                  "value": "123 Main Street, New York, NY 10001",
                  "type": "text"
                },
                {
                  "key": "propertyType",
                  "value": "domestic",
                  "type": "text"
                },
                {
                  "key": "bedrooms",
                  "value": "3",
                  "type": "text"
                },
                {
                  "key": "bathrooms",
                  "value": "2",
                  "type": "text"
                },
                {
                  "key": "squareFootage",
                  "value": "1500",
                  "type": "text"
                },
                {
                  "key": "yearBuilt",
                  "value": "2010",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Beautiful family home with modern amenities",
                  "type": "text"
                },
                {
                  "key": "images",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/property",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property"]
            },
            "description": "Create a new property with up to 15 images"
          }
        },
        {
          "name": "Get User Properties",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/property?page=1&limit=10&propertyType=domestic",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "propertyType",
                  "value": "domestic",
                  "description": "Filter by property type: domestic, commercial"
                }
              ]
            },
            "description": "Get all properties for the authenticated user"
          }
        },
        {
          "name": "Get Property by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/property/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property", "{{propertyId}}"]
            },
            "description": "Get specific property details by ID"
          }
        },
        {
          "name": "Update Property",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "address",
                  "value": "123 Updated Street, New York, NY 10001",
                  "type": "text"
                },
                {
                  "key": "bedrooms",
                  "value": "4",
                  "type": "text"
                },
                {
                  "key": "bathrooms",
                  "value": "3",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Updated description with new details",
                  "type": "text"
                },
                {
                  "key": "images",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/property/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property", "{{propertyId}}"]
            },
            "description": "Update an existing property with new images"
          }
        }
      ]
    },
    {
      "name": "Bid Management",
      "item": [
        {
          "name": "Get Job Bids",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/job/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bid", "job", "{{jobRequestId}}"]
            },
            "description": "Get all bids for a specific job request"
          }
        },
        {
          "name": "Accept Bid",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"acceptedAt\": \"2024-01-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/{{bidId}}/accept",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "{{bidId}}", "accept"]
            },
            "description": "Accept a bid for a job request. This will:\n1. Mark the selected bid as 'accepted'\n2. Reject all other bids for the same job\n3. Update job status to 'inprogress'\n4. Add entry to timelineHistory array\n5. Set acceptedBid field on job request"
          }
        },
        {
          "name": "Accept Bid - Complete Workflow",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"acceptedAt\": \"2024-01-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/{{bidId}}/accept",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "{{bidId}}", "accept"]
            },
            "description": "Complete bid acceptance workflow. After accepting:\n- Check job request status (should be 'inprogress')\n- Check acceptedBid field (should contain bid ID)\n- Check timelineHistory (should have new 'accepted' entry)\n- Check other bids status (should be 'rejected')"
          }
        }
      ]
    },
    {
      "name": "Contractor Management",
      "item": [
        {
          "name": "Create Bid",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobRequestId\": \"JOB_REQUEST_ID\",\n  \"bidAmount\": 12000,\n  \"message\": \"Professional kitchen renovation with high-quality materials\",\n  \"timeline\": {\n    \"startDate\": \"2024-02-01\",\n    \"endDate\": \"2024-03-15\"\n  },\n  \"materials\": [\n    \"High-quality materials\",\n    \"Professional tools\",\n    \"Safety equipment\"\n  ],\n  \"warranty\": \"5 years\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/bid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "contractor", "bid"]
            },
            "description": "Create a bid for a job request (contractor only). Timeline must be an object with startDate and endDate."
          }
        },
        {
          "name": "Get Contractor Bids",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/bids?page=1&limit=10&status=all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "contractor", "bids"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "status",
                  "value": "all",
                  "description": "Filter by status: all, pending, accepted, rejected"
                }
              ]
            },
            "description": "Get all bids created by the contractor"
          }
        },
        {
          "name": "Get Job Bids (Contractor)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/bids/job/{{jobRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "contractor", "bids", "job", "{{jobRequestId}}"]
            },
            "description": "Get bids for a specific job request (contractor view)"
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\",\n  \"geoHome\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"customer\": {\n    \"defaultPropertyType\": \"domestic\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            },
            "description": "Create a new user account"
          }
        },
        {
          "name": "Get Admin Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/get-admins",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "get-admins"]
            },
            "description": "Get all admin users"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"OldPassword123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "change-password"]
            },
            "description": "Change user password"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Get user details by ID"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "firstName",
                  "value": "John",
                  "type": "text"
                },
                {
                  "key": "lastName",
                  "value": "Doe",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "john.doe@example.com",
                  "type": "text"
                },
                {
                  "key": "phone",
                  "value": "+1234567890",
                  "type": "text"
                },
                {
                  "key": "profileImage",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Update user profile with optional profile image"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            },
            "description": "Delete user account"
          }
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user?page=1&limit=10&role=customer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "Filter by role: customer, contractor, admin"
                }
              ]
            },
            "description": "List users with pagination and filtering"
          }
        }
      ]
    },
    {
      "name": "Favorites",
      "item": [
        {
          "name": "Get Favorite Contractors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/favorites",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites"]
            },
            "description": "Get all favorite contractors with full details (customers only)"
          }
        },
        {
          "name": "Add Contractor to Favorites",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"note\": \"Optional: Add a note about this contractor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/favorites/{{contractorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites", "{{contractorId}}"]
            },
            "description": "Add a contractor to favorites (max 10, customers only)"
          }
        },
        {
          "name": "Remove Contractor from Favorites",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/favorites/{{contractorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "favorites", "{{contractorId}}"]
            },
            "description": "Remove a contractor from favorites (customers only)"
          }
        }
      ]
    },
    {
      "name": "Complete Workflow Testing",
      "item": [
        {
          "name": "1. Create Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Property\",\n  \"propertyType\": \"house\",\n  \"location\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-74.006, 40.7128]\n  },\n  \"area\": 1500,\n  \"areaUnit\": \"sqft\",\n  \"totalRooms\": 6,\n  \"bedrooms\": 3,\n  \"bathrooms\": 2,\n  \"kitchens\": 1,\n  \"description\": \"Test property for workflow testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/property",
              "host": ["{{baseUrl}}"],
              "path": ["api", "property"]
            },
            "description": "Step 1: Create a property for the workflow. Save the property ID for next steps."
          }
        },
        {
          "name": "2. Create Job Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete Workflow Test\",\n  \"description\": \"Testing complete job request and bid workflow\",\n  \"property\": \"PROPERTY_ID_FROM_STEP_1\",\n  \"service\": \"solar\",\n  \"estimate\": 10000,\n  \"type\": \"regular\",\n  \"timeline\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/requests",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests"]
            },
            "description": "Step 2: Create a job request using the property from step 1. Save the job request ID for next steps."
          }
        },
        {
          "name": "3. Create Bid (Contractor)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobRequestId\": \"JOB_REQUEST_ID_FROM_STEP_2\",\n  \"bidAmount\": 9500,\n  \"message\": \"Professional service with warranty\",\n  \"timeline\": {\n    \"startDate\": \"2024-02-01\",\n    \"endDate\": \"2024-03-02\"\n  },\n  \"materials\": [\"Professional materials\", \"Safety equipment\"],\n  \"warranty\": \"10 years\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/bid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "contractor", "bid"]
            },
            "description": "Step 3: Create a bid as contractor. Save the bid ID for next steps."
          }
        },
        {
          "name": "4. Accept Bid (Customer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"acceptedAt\": \"2024-01-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/job/bids/BID_ID_FROM_STEP_3/accept",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "bids", "BID_ID_FROM_STEP_3", "accept"]
            },
            "description": "Step 4: Accept the bid as customer. This triggers the complete workflow with status updates and timeline history."
          }
        },
        {
          "name": "5. Verify Complete Workflow",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/requests/JOB_REQUEST_ID_FROM_STEP_2",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "requests", "JOB_REQUEST_ID_FROM_STEP_2"]
            },
            "description": "Step 5: Verify the complete workflow worked correctly. Check:\n- status: should be 'inprogress'\n- acceptedBid: should contain the bid ID\n- timelineHistory: should have 'accepted' entry with date and user"
          }
        }
      ]
    },
    {
      "name": "Contractor Job Management",
      "item": [
        {
          "name": "Get Jobs for Contractor",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/jobs?page=1&limit=10&service=plumbing&search=solar",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "contractor", "jobs"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of jobs per page (max 100)"
                },
                {
                  "key": "service",
                  "value": "plumbing",
                  "description": "Filter by service type (e.g., plumbing, electrical, solar)",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "solar",
                  "description": "Search in job title and description",
                  "disabled": true
                }
              ]
            },
            "description": "Get jobs available to contractor based on membership plan. Returns jobs with access control, time delays, lead limits, and geospatial filtering applied. Only shows jobs that are currently accessible (canAccessNow: true)."
          }
        },
        {
          "name": "Get Job Details (Consumes Lead)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "contractor", "jobs", "{{jobId}}"]
            },
            "description": "Get specific job details and consume a lead if accessible. Returns job information with customer and property details. Will return error if job is not accessible or lead limit is reached."
          }
        },
        {
          "name": "Check Job Access (No Lead Consumption)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/job/contractor/jobs/{{jobId}}/access",
              "host": ["{{baseUrl}}"],
              "path": ["api", "job", "contractor", "jobs", "{{jobId}}", "access"]
            },
            "description": "Check if contractor can access a specific job without consuming a lead. Returns access status, lead availability, and job preview information."
          }
        }
      ]
    },
    {
      "name": "Dashboard Analytics",
      "item": [
        {
          "name": "Smart Dashboard (Role-Based)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/platform",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "platform"]
            },
            "description": "Single smart dashboard endpoint that returns different analytics based on user role:\n\nüî¥ **Admin**: Complete platform analytics, health score, business intelligence\nüü° **Contractor**: Bidding performance, earnings, win rate, lead usage\nüîµ **Customer**: Personal job statistics, payment history, property analytics\n\nThe response structure changes based on the authenticated user's role, providing tailored dashboard data automatically."
          }
        },
        {
          "name": "Platform Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", ""]
            },
            "description": "Alternative dashboard endpoint - returns role-based analytics automatically"
          }
        }
      ]
    },
    {
      "name": "Admin Management",
      "item": [
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "stats"]
            },
            "description": "Get user statistics overview"
          }
        },
        {
          "name": "Get Users with Advanced Filtering",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=10&role=customer&status=pending&approval=pending&email=&phone=&companyName=&services=&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (5, 10, 20, 50)"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "Filter by role: customer, contractor, admin",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "pending",
                  "description": "Filter by status: pending, active, revoke",
                  "disabled": true
                },
                {
                  "key": "approval",
                  "value": "pending",
                  "description": "Filter by approval: pending, approved, rejected",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "",
                  "description": "Search by email pattern (e.g., 'customer', '@test.com')",
                  "disabled": true
                },
                {
                  "key": "phone",
                  "value": "",
                  "description": "Search by phone pattern (e.g., '+1234', '567')",
                  "disabled": true
                },
                {
                  "key": "companyName",
                  "value": "",
                  "description": "Search contractor company names (e.g., 'TestCorp')",
                  "disabled": true
                },
                {
                  "key": "services",
                  "value": "",
                  "description": "Filter by services: plumbing,electrical,hvac (comma-separated)",
                  "disabled": true
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "Sort field: createdAt, updatedAt, email"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc, desc"
                }
              ]
            },
            "description": "**Primary filtering endpoint with comprehensive parameter options**\n\nThis request provides all available filtering, sorting, and pagination parameters for user management. Enable/disable parameters as needed by checking/unchecking them in the Params tab.\n\n**Available Filters:**\n‚Ä¢ Role-based filtering (customer, contractor, admin)\n‚Ä¢ Status filtering (pending, active, revoke)\n‚Ä¢ Approval status filtering (pending, approved, rejected)\n‚Ä¢ Text search (email, phone, company name)\n‚Ä¢ Service-based filtering for contractors\n‚Ä¢ Sorting and pagination controls\n\n**Usage Examples:**\n‚Ä¢ Pending customer approvals: Enable 'role'='customer' + 'status'='pending'\n‚Ä¢ Email search: Enable 'email'='@company.com'\n‚Ä¢ Active contractors: Enable 'role'='contractor' + 'status'='active'\n\n**Default:** Returns latest 10 users with standard pagination."
          }
        },
        {
          "name": "Get Pending Approvals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?status=pending&approval=pending&sortBy=createdAt&sortOrder=asc&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "status",
                  "value": "pending",
                  "description": "Users with pending status"
                },
                {
                  "key": "approval",
                  "value": "pending",
                  "description": "Users with pending approval"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "asc",
                  "description": "Oldest first (FIFO processing)"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "üîß Enable this to filter only customers",
                  "disabled": true
                },
                {
                  "key": "role",
                  "value": "contractor",
                  "description": "üîß Or enable this to filter only contractors",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieve all users with pending approval status. Optimized for administrator approval workflows with FIFO processing order."
          }
        },
        {
          "name": "Get Active Users Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?status=active&approval=approved&sortBy=updatedAt&sortOrder=desc&page=1&limit=15",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "approval",
                  "value": "approved"
                },
                {
                  "key": "sortBy",
                  "value": "updatedAt",
                  "description": "Recently active users first"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "15"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "üîß Enable to see only active customers",
                  "disabled": true
                },
                {
                  "key": "role",
                  "value": "contractor",
                  "description": "üîß Enable to see only active contractors",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieve active users with approved status for dashboard and reporting purposes. Sorted by most recent activity."
          }
        },
        {
          "name": "Search Users by Text",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=10&email=&phone=&companyName=&services=&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "email",
                  "value": "",
                  "description": "üîç Type email pattern here (e.g., 'customer', '@test.com')"
                },
                {
                  "key": "phone",
                  "value": "",
                  "description": "üîç Type phone pattern here (e.g., '+1234', '567')"
                },
                {
                  "key": "companyName",
                  "value": "",
                  "description": "üîç Type company name here (e.g., 'TestCorp')"
                },
                {
                  "key": "services",
                  "value": "",
                  "description": "üîç Type services here (e.g., 'plumbing,electrical')"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "role",
                  "value": "customer",
                  "description": "üîß Enable to search only customers",
                  "disabled": true
                },
                {
                  "key": "role",
                  "value": "contractor",
                  "description": "üîß Enable to search only contractors",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "active",
                  "description": "üîß Enable to search only active users",
                  "disabled": true
                }
              ]
            },
            "description": "Search users by email, phone, or company name. Configure search parameters by enabling relevant filters in the Params tab."
          }
        },
        {
          "name": "Get Users with Pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=5&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Get users with pagination and sorting"
          }
        },
        {
          "name": "Get Single User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Get single user by ID (set userId variable)"
          }
        },
        {
          "name": "Approve User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"active\",\n  \"approval\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Approve a user - sets status to active and approval to approved"
          }
        },
        {
          "name": "Approve User (Alternative)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"active\",\n  \"approval\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Approve a user - sets status to active and approval to approved"
          }
        },
        {
          "name": "Reject User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approval\": \"rejected\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Reject a user - sets approval to rejected"
          }
        },
        {
          "name": "Reject User (Alternative)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approval\": \"rejected\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Reject a user - sets approval to rejected"
          }
        },
        {
          "name": "Revoke User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", "{{userId}}"]
            },
            "description": "Revoke (soft delete) a user"
          }
        }
      ]
    }
  ]
}
